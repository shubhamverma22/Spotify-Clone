{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamverma/Desktop/spotifyclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [{\n    user\n  }, dispatch] = useDataLayerValue(); //Run code based on a given condition\n\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        });\n      });\n    }\n\n    console.log(\"I have token -->\", token);\n  }, []);\n  console.log(\"User is:-\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"xBJRNYQIT9SaSfzcXfyj8DFCdMM=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shubhamverma/Desktop/spotifyclone/src/App.js"],"names":["React","useEffect","useState","getTokenFromResponse","Login","Player","SpotifyWebApi","useDataLayerValue","spotify","App","token","setToken","user","dispatch","hash","window","location","_token","access_token","setAccessToken","getMe","then","type","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,MAAMC,OAAO,GAAG,IAAIF,aAAJ,EAAhB;;AAEA,SAASG,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC;AAACU,IAAAA;AAAD,GAAD,EAASC,QAAT,IAAqBN,iBAAiB,EAA5C,CAFc,CAGd;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,IAAI,GAAGX,oBAAoB,EAAjC;AACAY,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAID,MAAJ,EAAY;AACXN,MAAAA,QAAQ,CAACM,MAAD,CAAR;AAEAT,MAAAA,OAAO,CAACW,cAAR,CAAuBF,MAAvB;AACAT,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAsBT,IAAD,IAAU;AAC9BC,QAAAA,QAAQ,CAAC;AACRS,UAAAA,IAAI,EAAE,UADE;AAERV,UAAAA,IAAI,EAAEA;AAFE,SAAD,CAAR;AAIA,OALD;AAMA;;AACDW,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCd,KAAhC;AACA,GAhBQ,EAgBN,EAhBM,CAAT;AAkBCa,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBd,KAAK,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAzBQD,G;UAEmBF,iB;;;KAFnBE,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\tconst [token, setToken] = useState(null);\n\tconst [{user}, dispatch] = useDataLayerValue();\n\t//Run code based on a given condition\n\tuseEffect(() => {\n\t\tconst hash = getTokenFromResponse();\n\t\twindow.location.hash = \"\";\n\t\tconst _token = hash.access_token;\n\t\tif (_token) {\n\t\t\tsetToken(_token);\n\n\t\t\tspotify.setAccessToken(_token);\n\t\t\tspotify.getMe().then((user) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"SET_USER\",\n\t\t\t\t\tuser: user,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tconsole.log(\"I have token -->\", token);\n\t}, []);\n\n  console.log(\"User is:-\")\n\n\treturn <div className=\"app\">{token ? <Player /> : <Login />}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}