{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamverma/Desktop/Spotify-Clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue(); //Run code based on a given condition\n\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        });\n      });\n    }\n\n    console.log(\"I have token -->\", token);\n  }, []);\n  console.log(\"User is:-\", user);\n  console.log(\"Token is:-\", token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"foik8K8A62p+aotmH1sMm8vTMMQ=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shubhamverma/Desktop/Spotify-Clone/src/App.js"],"names":["React","useEffect","getTokenFromResponse","Login","Player","SpotifyWebApi","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,MAAMC,OAAO,GAAG,IAAIF,aAAJ,EAAhB;;AAEA,SAASG,GAAT,GAAe;AAAA;;AACd,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkBC,QAAlB,IAA8BL,iBAAiB,EAArD,CADc,CAEd;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,IAAI,GAAGV,oBAAoB,EAAjC;AACAW,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAID,MAAJ,EAAY;AACXJ,MAAAA,QAAQ,CAAC;AACRM,QAAAA,IAAI,EAAE,WADE;AAERP,QAAAA,KAAK,EAAEK;AAFC,OAAD,CAAR;AAKAR,MAAAA,OAAO,CAACW,cAAR,CAAuBH,MAAvB;AACAR,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAsBX,IAAD,IAAU;AAC9BE,QAAAA,QAAQ,CAAC;AACRM,UAAAA,IAAI,EAAE,UADE;AAERR,UAAAA,IAAI,EAAEA;AAFE,SAAD,CAAR;AAIA,OALD;AAMA;;AACDY,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCZ,KAAhC;AACA,GAnBQ,EAmBN,EAnBM,CAAT;AAqBAW,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBb,IAAzB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,KAA1B;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBA,KAAK,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GA5BQF,G;UAC4BF,iB;;;KAD5BE,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\tconst [{ user, token }, dispatch] = useDataLayerValue();\n\t//Run code based on a given condition\n\tuseEffect(() => {\n\t\tconst hash = getTokenFromResponse();\n\t\twindow.location.hash = \"\";\n\t\tconst _token = hash.access_token;\n\t\tif (_token) {\n\t\t\tdispatch({\n\t\t\t\ttype: \"SET_TOKEN\",\n\t\t\t\ttoken: _token,\n\t\t\t});\n\n\t\t\tspotify.setAccessToken(_token);\n\t\t\tspotify.getMe().then((user) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"SET_USER\",\n\t\t\t\t\tuser: user,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tconsole.log(\"I have token -->\", token);\n\t}, []);\n\n\tconsole.log(\"User is:-\", user);\n\tconsole.log(\"Token is:-\", token);\n\n\treturn <div className=\"app\">{token ? <Player /> : <Login />}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}